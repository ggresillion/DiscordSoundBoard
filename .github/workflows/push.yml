name: push

on: push

jobs:

  build_and_push_api:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./api
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_API_IMAGE }}:${{ github.sha }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build_and_push_client:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_CLIENT_IMAGE }}:${{ github.sha }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  upgrade_helm_release:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_api
      - build_and_push_client
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Upgrade Helm
        uses: WyriHaximus/github-action-helm3@v2
        with:
          kubeconfig: '${{ secrets.KUBECONFIG }}'
          exec: |
            helm upgrade --install discordsoundboard chart \
            --set api.tag=${GITHUB_SHA} \
            --set client.tag=${GITHUB_SHA} \
            --set api.clientId="${CLIENT_ID}" \
            --set api.clientSecret="${CLIENT_SECRET}" \
            --set api.botToken="${BOT_TOKEN}"