version: '3'
services:

  traefik:
    image: traefik:2.3
    command:
      - "--log.level=debug"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL:?err}"      
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"    
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certificate-volume:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro 

  api:
    image: ggresillion/discordsoundboard_api:latest
    volumes:
      - uploads-volume:/app/uploads
    environment:
      - NODE_ENV=production
      - CLIENT_ID=${CLIENT_ID:?err}
      - CLIENT_SECRET=${CLIENT_SECRET:?err}
      - BOT_TOKEN=${BOT_TOKEN:?err}
      - DB_HOST=postgres
      - DB_PASSWORD=${DB_PASSWORD:?err}
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${HOST:?err}`) || PathPrefix(`/api`) || PathPrefix(`/socket.io`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
        
  postgres:
    image: postgres:12-alpine
    volumes:
      - database-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'dsb'
      POSTGRES_USER: 'dsb'
      POSTGRES_PASSWORD: $DB_PASSWORD

  client:
    image: ggresillion/discordsoundboard_client:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`${HOST:?err}`) && PathPrefix(`/`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=myresolver"
volumes:
  uploads-volume:
  database-volume:
  certificate-volume:
