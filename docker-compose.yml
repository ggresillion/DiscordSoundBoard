version: '3'
services:

  traefik:
    image: traefik:2.3
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  api:
    image: ggresillion/discordsoundboard_api:latest
    volumes:
      - uploads-volume:/app/uploads
    environment:
      - NODE_ENV=production
      - CLIENT_ID
      - CLIENT_SECRET
      - BOT_TOKEN
      - DB_HOST=postgres
      - DB_PASSWORD
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/socket.io`)"
      - "traefik.http.routers.api.entrypoints=web"

  postgres:
    image: postgres:12-alpine
    volumes:
      - database-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'dsb'
      POSTGRES_USER: 'dsb'
      POSTGRES_PASSWORD: $DB_PASSWORD

  client:
    image: ggresillion/discordsoundboard_client:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=PathPrefix(`/`)"
      - "traefik.http.routers.client.entrypoints=web"

volumes:
  uploads-volume:
  database-volume: